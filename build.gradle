plugins {
    id 'maven-publish'
    id 'java-library'
    alias libs.plugins.license
    alias libs.plugins.gradleutils
    alias libs.plugins.versions
}

group = 'net.minecraftforge'

version = gradleutils.tagOffsetVersion
println('Version: ' + version)

evaluationDependsOnChildren()

license {
    header project.file('LICENSE-header.txt')
    newLine false
}

test {
    useJUnitPlatform()
}

// If we are being told a specific vendor then we are probably being run in parallel
if (project.hasProperty('javaVendor') && project.hasProperty('javaVersion')) {
    test.javaLauncher.set(javaToolchains.launcherFor {
        it.vendor.set(JvmVendorSpec."${project.property('javaVendor').toUpperCase(Locale.ROOT)}" as JvmVendorSpec)
        it.languageVersion.set(JavaLanguageVersion.of(project.property('javaVersion') as int))
        it.implementation.set(JvmImplementation.VENDOR_SPECIFIC)
    })
} else if (!project.hasProperty('disable_bulk_tests')) {
    configurations {
        groovyScript
    }

    dependencies {
        groovyScript 'org.apache.ivy:ivy:2.4.0'
        groovyScript 'org.codehaus.groovy:groovy-all:3.0.19'
    }
    
    tasks.register('collectTests', JavaExec) {
        classpath = configurations.groovyScript
        main = 'groovy.ui.GroovyMain'
        args 'aggregate-junit-tests.groovy'
    }
    def SUPPORTED = (8..24)
	SUPPORTED = [8, 11, 16, 17, 21, 24] // LTS and MC Targets Only
    def VALID_VMS = [
        'Adoptium':  SUPPORTED - [   9, 10, 12, 13, 14, 15],
        'Amazon':    SUPPORTED - [   9, 10, 12, 13, 14],
        'Azul':      SUPPORTED,
        'BellSoft':  SUPPORTED - [   9, 10],
        'Graal_VM':  SUPPORTED - [8, 9, 10,     12, 13, 14, 15, 16, 17, 18,             24],
        'IBM':       SUPPORTED - [8, 9, 10, 11, 12, 13, 14, 15, 16, 17,             21, 24],
        'Microsoft': SUPPORTED - [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,     24],
        'Oracle':    SUPPORTED - [8,        11,                 16, 17,             21, 24],
        'SAP':       SUPPORTED - [8, 9, 10, 11,                 16, 17,             21, 24]
    ]
    VALID_VMS.each { javaVendor, javaVersions ->
        javaVersions.each { javaVersion ->
            def task = tasks.register("test${javaVendor}${javaVersion}", Test) {     
                useJUnitPlatform()
                javaLauncher.set(javaToolchains.launcherFor {
                    it.vendor.set(JvmVendorSpec."${javaVendor.toUpperCase(Locale.ROOT)}" as JvmVendorSpec)
                    it.languageVersion.set(JavaLanguageVersion.of(javaVersion))
                    it.implementation.set(JvmImplementation.VENDOR_SPECIFIC)
                })
                reports.html.destination = file("$buildDir/test_artifacts/test-reports-${javaVendor}-${javaVersion}/")
                reports.junitXml.destination = file("$buildDir/test_artifacts/test-results-${javaVendor}-${javaVersion}/")
            }
            test.dependsOn(task)
            collectTests.mustRunAfter(task)
        }
    }
}

compileJava {
    options.encoding = 'UTF-8'
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(8)
    withSourcesJar()
}

def unsafeJava9 = project(':unsafe-java9')
def unsafeJava24 = project(':unsafe-java24')

jar {
	dependsOn unsafeJava9.tasks.compileJava
    from(unsafeJava9.sourceSets.main.output) {
    	include '**/module-info.class'
    }
    
	dependsOn unsafeJava24.tasks.compileJava
    from(unsafeJava24.sourceSets.main.output) {
    	into '/META-INF/versions/24/'
    }
	
    manifest {
        attributes([
            'Automatic-Module-Name': 'net.minecraftforge.unsafe',
            'Multi-Release': 'true'
        ] as LinkedHashMap)
        attributes([
            'Specification-Title':    'unsafe',
            'Specification-Vendor':   'Forge',
            'Specification-Version':  gradleutils.gitInfo.tag,
            'Implementation-Title':   project.name,
            'Implementation-Version': project.version,
            'Implementation-Vendor': 'Forge'
        ] as LinkedHashMap, 'net/minecraftforge/unsafe/')
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(libs.junit.api)
    testRuntimeOnly(libs.junit.engine)
}

publishing {
    publications.register('mavenJava', MavenPublication) {
        from components.java
        artifactId = 'unsafe'
        pom {
            name = 'Unsafe'
            description = 'Unsafe hacks'
            url = 'https://github.com/MinecraftForge/Unsafe'
            licenses{ license { name = 'LGPLv2.1' } }
        }
    }
    repositories {
        maven gradleutils.publishingForgeMaven
    }
}
